<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ScenarioDAO">
 	<resultMap id="PackageHeaderMap"               type="java.util.HashMap">
       <result property="java.lang.String"         column="row_id"/>
       <result property="object"                   column="PackageBeanResult"/>
    </resultMap>
    
    <!-- 사용자 조회 -->
	<select id="selectScenarioList" parameterType="java.util.Map" resultMap="PackageHeaderMap">
	    SELECT div.* 
	    	, CASE WHEN div.depth = 'C' 
			THEN (SELECT UPCODE FROM sftm.itm_div sdiv 
			WHERE sdiv.id = div.upcode ) 
			ELSE '' END AS upupcode
	    FROM
	        sftm.itm_div div
	    WHERE 1=1
        <if test="depth != null"> 
        AND depth = #{depth}
        </if>
	    <if test="upcode != null"> 
        AND upcode = #{upcode}
        </if>    
        <if test="upupcode != null"> 
        AND upcode in (SELECT div2.id FROM sftm.itm_div div2 WHERE div2.depth = 'B' AND div2.upcode = #{upupcode})
        </if>   
        
        order by id 
        
	</select>
	
	
    <insert id="insertDivision" parameterType="map" useGeneratedKeys="true">
  		
           INSERT INTO sftm.itm_div
			VALUES(
			 #{depth} ||  LPAD( nextval('sftm.itm_div_id_seq'::REGCLASS)||'', 4, '0'), 
			 0,
			 #{name},
			 #{depth},
			 #{upcode},
			 'admin',
			 now(),
			 'admin',
			 now()
			 ) 
  	</insert>
  	
  	<select id="selectDivDepth" parameterType="java.util.Map" resultMap="PackageHeaderMap">
  		select div.id as detpth3
			, div.upcode as detpth2 
			, div2.upcode as detpth1 
		from sftm.itm_div div, sftm.itm_div div2
		 where div.upcode = div2.id
		 and div.id = #{id}
  	</select>

  	<!-- 팀 수정 -->
    <update id="updateDivision" parameterType="java.util.HashMap">
    UPDATE sftm.itm_div 
		SET name = #{name}, 
			upcode =  #{upcode}
		WHERE id = #{id}

    </update> 
    
    
    <delete id="deleteDivision" parameterType="java.util.HashMap">
		DELETE
		FROM sftm.itm_div div
		WHERE id = #{id}
		OR UPCODE = #{id}
		OR UPCODE IN (SELECT ID FROM sftm.itm_div indiv WHERE indiv.upcode = #{id})
    </delete> 


 	<!-- 사용자 조회 -->
	<!-- {"depthA":"A0003","depthB":"B0023","depthC":"C0009"} -->
	<select id="selectScenario" parameterType="java.util.Map" resultMap="PackageHeaderMap">
	    SELECT *
	    FROM
	        sftm.itm_scenario
	    WHERE 1=1
	    <if test="depthC != ''"> 
        AND div_id = #{depthC}
        </if>
        <if test="depthB != ''"> 
        AND div_id IN (select id from sftm.itm_div where upcode = #{depthB})
        </if>
     	 <if test="depthA != ''"> 
        AND div_id IN (
			select C.ID 
			from sftm.itm_div B, sftm.itm_div C
			where B.UPCODE = #{depthA}
			AND C.UPCODE = B.ID
		)
        </if>
         
        
	</select>
	
	
	 <insert id="insertScenario" parameterType="map" useGeneratedKeys="true">
  		
         INSERT INTO sftm.itm_scenario
			VALUES(
			#{scenario_code},
			#{scenario_name},
			#{div_id},
			#{is_batch},
			'C001_01', 
			#{description},
			'admin',
			now(),
			'admin',
			now()
			)
  	</insert>
  	
  	<update id="updateScenario" parameterType="map" useGeneratedKeys="true">
  		
  		
  		  UPDATE sftm.itm_scenario 
				SET scenario_name = #{scenario_name}, 
					description =  #{description},
					div_id =  #{div_id},
					is_batch =  #{is_batch}
					
				WHERE scenario_code = #{scenario_code}
  	</update>
  	
  	
  	<delete id="deleteTestcaseByUp" parameterType="java.util.HashMap">
		DELETE
		FROM sftm.itm_test_case
		WHERE scenario_code 	= #{scenario_code}
    </delete>
    
    <delete id="deleteScenario" parameterType="java.util.HashMap">
		DELETE
		FROM sftm.itm_scenario
		WHERE scenario_code 	= #{scenario_code}
    </delete>
  	
	<!-- testcase Select List  -->
	<select id="selectTestCaseList" parameterType="java.util.Map" resultMap="PackageHeaderMap">
	   SELECT row_number() OVER () as rnum,
			cs.*, 
			COALESCE(sftm.GET_CODENAME('C001', cs.state), '') as stateStr,
			COALESCE(test.name, '') test_name, 
			COALESCE(dev.name, '') dev_name, 
			COALESCE(reg.name, '') reg_name, 
			COALESCE(sc.scenario_name, '') scenario_name
	    FROM
		sftm.itm_test_case cs
	     LEFT JOIN sftm.itm_user test ON cs.tester_id = test.user_id
		 LEFT JOIN sftm.itm_user dev ON cs.dev_id = dev.user_id   
		 LEFT JOIN sftm.itm_user reg ON cs.reg_user = reg.user_id
		 LEFT JOIN sftm.itm_scenario sc ON cs.scenario_code = sc.scenario_code
	    WHERE 1=1
		<if test="scenario_code != null and scenario_code != ''">
        AND cs.scenario_code = #{scenario_code}
        </if>
        <if test="dev_id != null and dev_id != ''">
        AND cs.dev_id = #{dev_id}
        </if>
		<if test="tester_id != null and tester_id != ''">
        AND cs.tester_id = #{tester_id}
        </if>
	</select>
	
	<insert id="insertTestcase" parameterType="map" useGeneratedKeys="true">
   
		INSERT INTO sftm.itm_test_case
		VALUES(
			#{testcase_code},
			#{testcase_name},
			0,
			#{scenario_code},
			#{tester_id},
			#{dev_id},
			'C001_01', --state
			#{description},
			'admin',
			now(),
			'admin',
			now()
			)
  	</insert>
  	
  	<update id="updateTestcase" parameterType="map" useGeneratedKeys="true">
    	UPDATE sftm.itm_test_case 
		SET case_name 	= #{case_name}, 
			tester_id 		=  #{tester_id}, 
			dev_id 			=  #{dev_id}, 
			description 	=  #{description} 
		WHERE case_code = #{case_code} 
		AND scenario_code 	= #{scenario_code}
    </update> 
    
    <update id="updateTestcaseOnlyState" parameterType="map" useGeneratedKeys="true">
    	UPDATE sftm.itm_test_case 
		SET state = #{state} 
		WHERE case_code = #{case_code} 
		AND scenario_code 	= #{scenario_code}
    </update> 
    
  	<delete id="deleteTestcase" parameterType="java.util.HashMap">
		DELETE
		FROM sftm.itm_test_case
		WHERE case_code 	= #{case_code} 
		AND scenario_code 	= #{scenario_code}
    </delete>
    
     <!-- 사용자 조회 -->
	<!-- {"depthA":"A0003","depthB":"B0023","depthC":"C0009"} -->
	<select id="selectDefectByDevIdList" parameterType="java.util.Map" resultMap="PackageHeaderMap">
	   select  row_number() OVER () as rnum, 
			cs.case_code,  --케이스명 
			cs.case_name,  --케이스명 
			cs.scenario_code,
			sc.scenario_name,
		
			 df.test_type_id,
			 sftm.GET_CODENAME('A001', df.test_type_id) as test_type_name,
			 df.defect_code,
			 sftm.GET_CODENAME('B001', df.defect_code) as defect_name,
			 df.title,
			 df.description,
			 df.defect_user,
			 df.reg_user,
	 		 to_char(df.reg_date, 'YYYY-MM-DD') reg_date,
	 		  df.imgkey,
	 		 COALESCE(to_char(df.resolve_date, 'YYYY-MM-DD'), '-') resolve_date
	 		 ,COALESCE(dev.name, '') defect_user_name
	 		 , COALESCE(reg.name, '') reg_name 
	 		  ,df.id
	 		  ,df.defect_result
		from sftm.itm_test_case cs ,
			sftm.itm_defect df
				LEFT JOIN sftm.itm_user dev ON df.defect_user = dev.user_id
				LEFT JOIN sftm.itm_user reg ON df.reg_user = reg.user_id,
			sftm.itm_scenario sc
		where 1=1
		<if test="dev_id != null and dev_id != ''">
			and df.defect_user = #{dev_id} 
		</if>
		<if test="team_id != null and team_id != ''">
			and cs.dev_id IN (SELECT user_id FROM sftm.itm_user where team_id = #{team_id}::bigint  )
		</if>
		and cs.scenario_code = df.scenario_code
		and cs.case_code = df.case_code
		and cs.scenario_code = sc.scenario_code
		;
		        
	</select>
</mapper>